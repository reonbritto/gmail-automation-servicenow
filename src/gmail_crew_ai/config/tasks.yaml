response_task:
  description: >
    Process emails relevant to a ServiceNow Developer. The email data is assumed to be available (e.g., from 'output/fetched_emails.json'). The 'user_preference.txt' knowledge file contains ServiceNow developer-specific notes, instance details, coding standards, and common script patterns.

    For each relevant email:
      1. **Analyze Content**: Determine the nature of the email (e.g., technical query, code review request, API question, deployment notification, build status).
      2. **Assess if Actionable**: Prioritize emails requiring a technical response, clarification, or acknowledgment.
         - Refer to 'user_preference.txt' for guidance on triaging emails (e.g., keywords for urgent issues, typical response patterns for common queries).
      3. **Formulate Response (if needed)**:
         - If a response is needed, consult 'user_preference.txt' for relevant information:
           - ServiceNow instance URLs (Dev, Test, Prod).
           - Links to internal coding standards or API documentation.
           - Common script snippets or GlideRecord examples.
           - Standard acknowledgments for deployment notifications.
         - Draft a technically sound and professional reply.
         - Address specific technical points raised in the email.
         - If a query is about a script, refer to best practices for GlideRecord, Business Rules, Script Includes, etc.
         - If it's a code review feedback, summarize points or draft an acknowledgment.
      4. **Use Developer Communication Style**:
         - Maintain a clear, concise, and technical tone.
         - Include relevant technical details (e.g., script names, table names, sys_ids if appropriate and safe).
         - Use the signature defined in 'user_preference.txt'.
      5. **Save Draft**: Use the 'save_email_draft' tool for all generated responses.
         - Subject: "Re: [Original Subject]" (or a more specific subject if appropriate, e.g., "Re: Query about [Script Name]").
         - Body: The generated response.
         - Recipient: The original sender.

    IMPORTANT: - Focus on emails directly related to ServiceNow development, administration, or platform issues. - Filter out general IT support requests, HR emails, or non-technical communications unless specified in 'user_preference.txt'.

  expected_output: >
    A JSON report detailing the emails processed. Each entry should include: - Original Email ID and Subject. - Categorization of the email (e.g., "Technical Query", "Code Review", "Deployment Info", "General Dev Comms"). - Action Taken: (e.g., "Drafted response for API query", "Acknowledged code review feedback", "Skipped - Non-actionable notification"). - Recipient of the draft if one was created. - Filename/ID of the saved draft if one was created. - Brief summary of the response generated or reason for skipping.
  agent: response_generator
  output_file: output/response_report.json
